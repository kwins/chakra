syntax="proto3";
package proto.client;

import "types.proto";
import "element.proto";

message StateInfo {
  bool succ = 1;
  string errmsg = 2;
}

message MultiState {
  map<string, StateInfo> value = 1;
}

message SetMessageRequest {
  string db_name = 1;
  string key = 2;
  element.ElementType type = 3;
  int64 ttl = 4;
  oneof Value {
      string s = 5;
      float f = 7;
      element.SS ss = 8;
      element.FF ff = 10;
  }
}

message SetMessageResponse {
  types.Error error = 1;
}

message MSetMessageRequest {
  repeated SetMessageRequest datas = 1;
}

message MSetMessageResponse {
  types.Error error = 1;
  // dbname -> keys action state
  map<string, MultiState> states = 2;
}

message GetMessageRequest {
  string db_name = 1;
  string key = 2;
}

message GetMessageResponse {
  types.Error error = 1;
  element.Element data = 2;
}

message Keys {
  repeated string value = 1;
}

message MGetMessageRequest {
  map<string, Keys> keys= 1;
}

message Elements {
  // key -> value
  map<string, element.Element> value = 1;
}

message MGetMessageResponse {
  types.Error error = 1;
  // dbname -> elements
  map<string, Elements> datas = 2;
}

message PushMessageRequest {
  string db_name = 1;
  string key = 2;
  element.ElementType type = 3;
  int64 ttl = 4;
  oneof Value {
      string s = 5;
      float f = 7;
      element.SS ss = 8;
      element.FF ff = 10;
  }
}

message PushMessageResponse {
  types.Error error = 1;
}

message MPushMessageRequest {
  repeated PushMessageRequest datas = 1;
}

message MPushMessageResponse {
  types.Error error = 1;
  map<string, MultiState> states = 2;
}

message IncrMessageRequest {
  string db_name = 1;
  string key = 2;
  element.ElementType type = 3;
  int64 ttl = 4;
  oneof Value {
      string s = 5;
      float f = 7;
      element.SS ss = 8;
      element.FF ff = 10;
  }
}

message IncrMessageResponse {
  types.Error error = 1;
}

message MIncrMessageRequest {
  repeated IncrMessageRequest datas = 1;
}

message MIncrMessageResponse {
  types.Error error = 1;
  map<string, MultiState> states = 2;
}